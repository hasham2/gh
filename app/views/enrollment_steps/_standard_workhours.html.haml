%fieldset
  .container
    .row
      .col-lg-11.time_bgcolor.set_height_background
        .col-lg-3.timeinputtop
          .form-group
            .col-sm-8
              = f.select :day_of_week, options_for_select([["Monday", "m"], ["Tuesday", "t"], ["Wednesday", "w"], ["Thursday", "th"],["Friday", "f"],["Saturday", "s"],["Sunday", "su"]],:selected=>f.object.day_of_week? ? f.object.day_of_week : '') , {:prompt => 'Select Day'}, :class=>"day_of_week form-control"
        .col-lg-4.timeinputtop
          .form-group
            %label.col-sm-4.control-label{for: "inputPassword3"} Start Time
            .col-sm-6.date.start_time_picker
              =f.time_field :start_time , :class=>"form-control time start_date change_time", :placeholder => "From", :type => "text", :value => f.object.start_time? ? f.object.start_time.try(:strftime, '%I:%M %p') : ' 9:00 AM' 
        .col-lg-4.timeinputtop
          .form-group
            %label.col-sm-4.control-label{for: "inputPassword3"} End Time
            .col-sm-6.date.start_time_picker
              =f.time_field :end_time , :class=>"form-control time end_date change_time", :placeholder => "To", :type => "text", :value => f.object.end_time? ? f.object.end_time.try(:strftime, '%I:%M %p') : ' 5:00 PM' 
        .col-lg-1.timeinputtop.pull-right.remove
          =  f.hidden_field :_destroy
          =  link_to " Delete","#", class: "remove_fields btn btn-success btn-nextstep pull-right"
:javascript
  $(function () {
    $('.start_time_picker').datetimepicker({
        pickDate: false
    });
    });
  
  $(function () {
    $('input.change_time').focusout(function(){

      var ref_start_date = $(this).closest('fieldset:visible').find('.start_date');
      var ref_end_date   = $(this).closest('fieldset:visible').find('.end_date');
      var current_start_time =  $(this).closest('fieldset:visible').find('.start_date').val();
      var current_end_time =  $(this).closest('fieldset:visible').find('.end_date').val();
      var current_day = $(this).closest('fieldset:visible').find('.day_of_week').val();
      
      var current_StartTime_outside = new Date("1/1/2007 " + current_start_time);
      var current_Endtime_outside = new Date("1/1/2007 " + current_end_time);

      $(this).closest('fieldset:visible').prevAll("fieldset:visible").each(function( index ) {
        var prev_end_time = $(this).closest('fieldset:visible').find('.end_date').val();
        var prev_start_time = $(this).closest('fieldset:visible').find('.start_date').val();
        var pre_day = $(this).closest('fieldset:visible').find('.day_of_week').val();
      
      var previous_StartTime  = new Date("1/1/2007 " + prev_start_time);
      var previous_EndTime = new Date("1/1/2007 " + prev_end_time);

      var current_StartTime = new Date("1/1/2007 " + current_start_time);
      var current_Endtime = new Date("1/1/2007 " + current_end_time);

      if (current_day === pre_day ){
        if (current_start_time) {
          if (current_StartTime <= previous_EndTime){
            alert("Start time can not overlapped!");
            ref_start_date.val('');
          }
        }
      }
      });
        if (current_end_time&& current_start_time) {
          if (!(current_Endtime_outside >current_StartTime_outside)){
            alert("End time must be after Start time");
            ref_end_date.val('');
            current_end_time=null;
          }
        }
      $(this).closest('fieldset').nextAll("fieldset").each(function( index ) {
          var prev_end_time = $(this).closest('fieldset').find('.end_date').val();
          var prev_start_time = $(this).closest('fieldset').find('.start_date').val();
          var pre_day = $(this).closest('fieldset').find('.day_of_week').val();
           console.log(prev_end_time+"==="+prev_start_time+"====="+pre_day);
        
        var previous_StartTime  = new Date("1/1/2007 " + prev_start_time);
        var previous_EndTime = new Date("1/1/2007 " + prev_end_time);

        var current_StartTime = new Date("1/1/2007 " + current_start_time);
        var current_Endtime = new Date("1/1/2007 " + current_end_time);
        if (current_day === pre_day ){
          if (current_start_time) {
            if (current_StartTime <= previous_EndTime){
              alert("Start time can not be overlapped!");
              ref_start_date.val('');
            }
          }
          if (current_end_time&& current_start_time) {
            if (!(current_Endtime > current_StartTime)){
              alert("End time must be after Start time");
              ref_end_date.val('');
            }
          }  
        }
      });  
    });
  $('.end_time_picker').datetimepicker({
    pickDate: false
  });
  });